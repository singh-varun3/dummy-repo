/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.Distributor;

import Business.Enterprise.Enterprise;
import Business.Order.OrderItem;
import Business.Organization.DistributorOrganization;
import Business.Vaccine.VaccineProduct;
import Business.Warehouse.Warehouse;
import Business.WorkQueue.VaccineOrderWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vaibhav
 */
public class StoreVaccinesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StoreVaccinesJPanel
     */
    private JPanel workContainer;
    private Enterprise enterprise;
    private DistributorOrganization distributorOrganization;
    private VaccineOrderWorkRequest request;
    
    public StoreVaccinesJPanel(JPanel workContainer,Enterprise enterprise, DistributorOrganization distributorOrganization, VaccineOrderWorkRequest request) {
        initComponents();
        this.workContainer = workContainer;
        this.enterprise = enterprise;
        this.distributorOrganization = distributorOrganization;
        this.request = request;
        orderNumberjTextField.setText(String.valueOf(request.getVaccineOrder().getOrderNumber()));
        populateTable();
        calculateTotalAmount();
        populateWarehouseComboBox();
        
    }
    
    private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) orderParticularsjTable.getModel();

        model.setRowCount(0);

        for (OrderItem orderItem : request.getVaccineOrder().getOrderList()) {
            Object[] row = new Object[4];
            row[0] = orderItem.getVaccineProduct().getVaccineDefinition().getVaccineCode();
            row[1] = orderItem;
            row[2] = orderItem.getQuantity();
            row[3] = orderItem.getVaccineProduct().getVaccinePrice() * orderItem.getQuantity();

            model.addRow(row);
        }
    }
    
     private void calculateTotalAmount() {

        double totalAmount = 0;
        for (OrderItem orderItem : request.getVaccineOrder().getOrderList()) {
            totalAmount = totalAmount + (orderItem.getVaccineProduct().getVaccinePrice() * orderItem.getQuantity());
        }

        totalAmountjTextField.setText(String.valueOf(totalAmount));
    }
     
     private void populateWarehouseComboBox(){
         warehousejComboBox.removeAllItems();
         
         for(Warehouse warehouse: distributorOrganization.getWarehouseDir().getWarehouseList())
         {
             warehousejComboBox.addItem(warehouse);
         }
         
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        totalAmountjTextField = new javax.swing.JTextField();
        storeVaccinejButton = new javax.swing.JButton();
        backJButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderParticularsjTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        orderNumberjTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        warehousejComboBox = new javax.swing.JComboBox();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Store Vaccines");

        jLabel4.setText("Total Amount of Order: ");

        totalAmountjTextField.setEnabled(false);

        storeVaccinejButton.setText("Store Vaccine");
        storeVaccinejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeVaccinejButtonActionPerformed(evt);
            }
        });

        backJButton2.setText("<< Back");
        backJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Particulars:");

        orderParticularsjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Code", "Vaccine Name", "Quantity", "Total Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderParticularsjTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(orderParticularsjTable);

        jLabel3.setText("Order Number:");

        orderNumberjTextField.setEnabled(false);

        jLabel5.setText("Store in:");

        jLabel6.setText("Warehouse:");

        warehousejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(orderNumberjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalAmountjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(backJButton2)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(warehousejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(storeVaccinejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(orderNumberjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(totalAmountjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(warehousejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(storeVaccinejButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(backJButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void storeVaccinejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeVaccinejButtonActionPerformed
        // TODO add your handling code here:
         if(request.getStatus().equalsIgnoreCase("Stored")) {
            JOptionPane.showMessageDialog(null, "Order already Stored!");
            return;
        }
        
        int selectedRow = orderParticularsjTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select an Item from table");
            return;
        }
        OrderItem oi = (OrderItem)orderParticularsjTable.getValueAt(selectedRow, 1);
        
        
        
        //get the warehouse
        Warehouse warehouse = (Warehouse)warehousejComboBox.getSelectedItem();
        
        if(warehouse==null)
        {
            JOptionPane.showMessageDialog(null, "Warehouse not created");
            return;
        }
        
        //check if the product ordered is of same batch, if yes, update the quantity of the existing product
        VaccineProduct orderedVaccine = oi.getVaccineProduct();
        boolean flag = false;
        for(VaccineProduct product: warehouse.getVaccineInventoryList())
        {
            if(orderedVaccine.getBatchId().equals(product.getBatchId()) && orderedVaccine.getVaccineDefinition().getVaccineName().equals(product.getVaccineDefinition().getVaccineName()) && orderedVaccine.getManufacturerName().equalsIgnoreCase(product.getManufacturerName()))
            {   flag = true;
                product.setAvailablity(product.getAvailablity()+oi.getQuantity());
                break;
                
            }
            
        }
        
        
        //store it
        if(flag == false)
        {
            VaccineProduct prod = warehouse.addNewVaccineProduct();
            prod.setAvailablity(oi.getQuantity());
            prod.setBatchId(oi.getVaccineProduct().getBatchId());
            prod.setDateOfExpiry(oi.getVaccineProduct().getDateOfExpiry());
            prod.setManufactureDate(oi.getVaccineProduct().getManufactureDate());
            prod.setManufacturerName(oi.getVaccineProduct().getManufacturerName());
            prod.setMaxOperatingTemp(oi.getVaccineProduct().getMaxOperatingTemp());
            prod.setMinOperatingTemp(oi.getVaccineProduct().getMinOperatingTemp());
            prod.setVaccineDefinition(oi.getVaccineProduct().getVaccineDefinition());
            prod.setVaccineId(oi.getVaccineProduct().getVaccineId());
            prod.setVaccinePrice(oi.getVaccineProduct().getVaccinePrice());
            
            
       }
        //oi.getVaccineProduct().setAvailablity(oi.getQuantity());
        
        request.setStatus("Stored");
       
         JOptionPane.showMessageDialog(null, "Vaccine Stored in the Warehouse!");
        
        


    }//GEN-LAST:event_storeVaccinejButtonActionPerformed

    private void backJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton2ActionPerformed
        // TODO add your handling code here:
        workContainer.remove(this);
        CardLayout layout = (CardLayout) workContainer.getLayout();
        layout.previous(workContainer);
    }//GEN-LAST:event_backJButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField orderNumberjTextField;
    private javax.swing.JTable orderParticularsjTable;
    private javax.swing.JButton storeVaccinejButton;
    private javax.swing.JTextField totalAmountjTextField;
    private javax.swing.JComboBox warehousejComboBox;
    // End of variables declaration//GEN-END:variables
}
