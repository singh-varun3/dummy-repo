/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.Patient;

import Business.Enterprise.HospitalEnterprise;
import Business.Organization.HospitalOrganization;
import Business.Organization.Organization;
import Business.Person.Patient;
import Business.UserAccount.UserAccount;
import Business.Vaccine.AdministeredVaccine;
import UserInterface.Provider.*;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vaibhav
 */
public class PatientAdministeredVaccineListJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdministeredVaccineListJPanel
     */
    private JPanel workContainer;
    private HospitalEnterprise enterprise;
    private UserAccount userAccount;
    
    
    public PatientAdministeredVaccineListJPanel(JPanel workContainer,HospitalEnterprise enterprise, UserAccount userAccount ) {
        initComponents();
        this.workContainer = workContainer;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        populateTable();
    }
    
    private void populateTable()
    {
        
         int rowCount = vaccinejTable.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel)vaccinejTable.getModel();
        
        for(int i=rowCount-1 ; i>=0; i--){
            dtm.removeRow(i);
        }
        Patient patient =(Patient)userAccount.getPerson();
        
        
             for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList())
        {
            if(org instanceof HospitalOrganization)
            {
                HospitalOrganization hospOrg = (HospitalOrganization)org;
                for(AdministeredVaccine vaccine: hospOrg.getClinic().getAdministeredVaccineList())
                {     
                    if(!(vaccine.getVaccineProduct()== null) && !(vaccine.getPatient()==null) && vaccine.getPatient().equals(patient))
                    {Object[] row = new Object[9];
                    row[0]=vaccine.getVaccineProduct();
                    row[1]=vaccine;
                    row[2]=vaccine.getVaccineProduct().getManufacturerName();
                    row[3]=vaccine.getVaccineProduct().getBatchId();
                    row[4]=vaccine.getVaccineProduct().getVaccineId();
                    
                    row[5]=vaccine.getDate();
                    row[6]=vaccine.getSiteRoute();
                    row[7]=vaccine.getDoseNumber();
                    row[8]=vaccine.getInjectionStatus();
                    dtm.addRow(row);
                    
                    }
                }
            }
        }
                    
                    
                    
                
            
        
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vaccinejTable = new javax.swing.JTable();
        refreshjButton = new javax.swing.JButton();
        reportjButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Administered Vaccine List");

        vaccinejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Code", "Vaccine Name", "Brand", "Batch Number", "Vaccine Id", "Date", "SiteRoute", "Dose Number", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vaccinejTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(vaccinejTable);

        refreshjButton.setText("Refresh");
        refreshjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshjButtonActionPerformed(evt);
            }
        });

        reportjButton.setText("Report any Side Effects >>");
        reportjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(refreshjButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(reportjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshjButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reportjButton)
                .addContainerGap(100, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshjButtonActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_refreshjButtonActionPerformed

    private void reportjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportjButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = vaccinejTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a Vaccine from table");
            return;
        }
        
        AdministeredVaccine adVaccine = (AdministeredVaccine)vaccinejTable.getValueAt(selectedRow, 1);
        
        ReportSideEffectsJPanel panel = new ReportSideEffectsJPanel(workContainer, adVaccine);
        workContainer.add("ReportSideEffectsJPanel", panel);
        CardLayout layout = (CardLayout)workContainer.getLayout();
        layout.next(workContainer);
        
        
        
        
    }//GEN-LAST:event_reportjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshjButton;
    private javax.swing.JButton reportjButton;
    private javax.swing.JTable vaccinejTable;
    // End of variables declaration//GEN-END:variables
}
