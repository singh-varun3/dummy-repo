/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.SystemAdmin;

import Business.Business;
import Business.Network.StateNetwork;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vaibhav
 */
public class ManageStateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageStateJPanel
     */
    private JPanel workContainer;
    private Business business;
    
    public ManageStateJPanel(JPanel workContainer, Business business ) {
        initComponents();
        this.workContainer = workContainer;
        this.business = business;
        populateTable();
        stateJComboBox.removeAllItems();
        populateStateComboBox();
        
        
        
    }
    
    private void populateTable(){
        
        DefaultTableModel model = (DefaultTableModel) statejTable.getModel();
        model.setRowCount(0);
        
        for(StateNetwork network : business.getStateList())
        {
            Object[] row = new Object[1];
            row[0] = network;
            model.addRow(row);
        }
        
        
        
    }
    
    private void populateStateComboBox(){
        
        stateJComboBox.addItem("Alabama");
        stateJComboBox.addItem("Alaska");
        stateJComboBox.addItem("Arizona");
        stateJComboBox.addItem("Arkansas");
        stateJComboBox.addItem("California");
        stateJComboBox.addItem("Colorado");
        stateJComboBox.addItem("Connecticut");
        stateJComboBox.addItem("Delaware");
        stateJComboBox.addItem("Florida");
        stateJComboBox.addItem("Georgia");
        
        stateJComboBox.addItem("Hawaii");
        stateJComboBox.addItem("Idaho");
        stateJComboBox.addItem("Illinois");
        stateJComboBox.addItem("Indiana");
        stateJComboBox.addItem("Iowa");
        stateJComboBox.addItem("Kansas");
        stateJComboBox.addItem("Kentucky");
        stateJComboBox.addItem("Louisiana");
        stateJComboBox.addItem("Maine");
        stateJComboBox.addItem("Maryland");
        
        stateJComboBox.addItem("Massachusetts");
        stateJComboBox.addItem("Michigan");
        stateJComboBox.addItem("Minnesota");
        stateJComboBox.addItem("Mississippi");
        stateJComboBox.addItem("Missouri");
        stateJComboBox.addItem("Montana");
        stateJComboBox.addItem("Nebraska");
        stateJComboBox.addItem("Nevada");
        stateJComboBox.addItem("New Hampshire");
        stateJComboBox.addItem("New Jersey");
        
        stateJComboBox.addItem("New Mexico");
        stateJComboBox.addItem("New York");
        stateJComboBox.addItem("North Carolina");
        stateJComboBox.addItem("North Dakota");
        stateJComboBox.addItem("Ohio");
        stateJComboBox.addItem("Oklahoma");
        stateJComboBox.addItem("Oregon");
        stateJComboBox.addItem("Pennsylvania");
        stateJComboBox.addItem("Rhode Island");
        stateJComboBox.addItem("South Carolina");
        
        stateJComboBox.addItem("South Dakota");
        stateJComboBox.addItem("Tennessee");
        stateJComboBox.addItem("Texas");
        stateJComboBox.addItem("Utah");
        stateJComboBox.addItem("Vermont");
        stateJComboBox.addItem("Virginia");
        stateJComboBox.addItem("Washington");
        stateJComboBox.addItem("West Virginia");
        stateJComboBox.addItem("Wisconsin");
        stateJComboBox.addItem("Wyoming");
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        statejTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        stateJComboBox = new javax.swing.JComboBox();
        addStateJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        removeStateJButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage States");

        statejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "State Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        statejTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(statejTable);
        if (statejTable.getColumnModel().getColumnCount() > 0) {
            statejTable.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel2.setText("Add New State:");

        jLabel3.setText("State Name:");

        stateJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        addStateJButton.setText("Add State");
        addStateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStateJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        removeStateJButton.setText("Remove State");
        removeStateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeStateJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(backJButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stateJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addStateJButton)))
                        .addGap(0, 70, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(removeStateJButton))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removeStateJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(stateJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addStateJButton))
                .addGap(30, 30, 30)
                .addComponent(backJButton)
                .addContainerGap(32, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addStateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStateJButtonActionPerformed
        // TODO add your handling code here:
        
        //check if the state exists
        for(StateNetwork s: business.getStateList())
        {
            if(s.getStateName().equalsIgnoreCase(String.valueOf(stateJComboBox.getSelectedItem())))
            {
                JOptionPane.showMessageDialog(null, "State exists!");
            return;
            }
        }
        
        
        StateNetwork state = business.addNewState(String.valueOf(stateJComboBox.getSelectedItem()));
        
        
        
        
        
        
        
        state.getPublicHealthDepartment().setName(state.getStateName());
        state.setStatePopulation(0);
        state.setVaccinesLeftForState(state.getStatePopulation());
        populateTable();
    }//GEN-LAST:event_addStateJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        workContainer.remove(this);
        CardLayout layout = (CardLayout) workContainer.getLayout();
        layout.previous(workContainer);
        
    }//GEN-LAST:event_backJButtonActionPerformed

    private void removeStateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeStateJButtonActionPerformed
        // TODO add your handling code here:
        int row = statejTable.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a State from table");
            return;
        }
        
        StateNetwork state = (StateNetwork)statejTable.getValueAt(row, 0);
        business.removeState(state);
        populateTable();
    }//GEN-LAST:event_removeStateJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStateJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton removeStateJButton;
    private javax.swing.JComboBox stateJComboBox;
    private javax.swing.JTable statejTable;
    // End of variables declaration//GEN-END:variables
}
