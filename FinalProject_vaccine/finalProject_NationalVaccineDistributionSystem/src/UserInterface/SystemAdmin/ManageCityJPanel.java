/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.SystemAdmin;

import Business.Business;
import Business.Network.CityNetwork;
import Business.Network.StateNetwork;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vaibhav
 */
public class ManageCityJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCityJPanel
     */
     private JPanel workContainer;
    private Business business;
    
    public ManageCityJPanel(JPanel workContainer, Business business) {
        initComponents();
        this.workContainer = workContainer;
        this.business = business;
        statejComboBox.removeAllItems();
        populateStateCombobox();
        populateTable();
    }
    
    private void populateStateCombobox(){
        
        for(StateNetwork state : business.getStateList())
        {
            statejComboBox.addItem(state);
        }
        
        
    }
    
    
    private void populateTable(){
        int rowCount = cityjTable.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel)cityjTable.getModel();
        
        //delete rows
        for(int i=rowCount-1 ; i>=0; i--){
            dtm.removeRow(i);
        }
        
         //get State from combo box
        StateNetwork state = (StateNetwork)statejComboBox.getSelectedItem();
        if(state == null){
            return;
        }
        
        //populate the table
        for (CityNetwork city: state.getCityList()){
            Object[] row = new Object[1];
            row[0]=city;
            
            dtm.addRow(row);
            
        }
        
        
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        statejComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        cityjTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        cityNameJTextField = new javax.swing.JTextField();
        addCityJButton = new javax.swing.JButton();
        removeCityjButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage City");

        jLabel2.setText("State: ");

        statejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        statejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statejComboBoxActionPerformed(evt);
            }
        });

        cityjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "City Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cityjTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(cityjTable);
        if (cityjTable.getColumnModel().getColumnCount() > 0) {
            cityjTable.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel3.setText("Add New City:");

        jLabel4.setText("City Name:");

        addCityJButton.setText("Add City");
        addCityJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCityJButtonActionPerformed(evt);
            }
        });

        removeCityjButton.setText("Remove City");
        removeCityjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCityjButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(removeCityjButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cityNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addCityJButton))
                            .addComponent(backJButton))
                        .addGap(0, 89, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(statejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removeCityjButton)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cityNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCityJButton))
                .addGap(18, 18, 18)
                .addComponent(backJButton)
                .addContainerGap(35, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        workContainer.remove(this);
        CardLayout layout = (CardLayout) workContainer.getLayout();
        layout.previous(workContainer);

    }//GEN-LAST:event_backJButtonActionPerformed

    private void addCityJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCityJButtonActionPerformed
        // TODO add your handling code here:
        String city = cityNameJTextField.getText();
        if(city.trim().equalsIgnoreCase(""))
        {
            JOptionPane.showMessageDialog(null, "Please Enter a city Name!");
            return;
            
        }
        
        StateNetwork state = (StateNetwork)statejComboBox.getSelectedItem();
        
        for(CityNetwork c: state.getCityList())
        {
            if(c.getName().equalsIgnoreCase(city))
            {
                JOptionPane.showMessageDialog(null, "City exists!");
            return;
            }
        }
        
        
        
        state.addNewCity(city);
        populateTable();
        
    }//GEN-LAST:event_addCityJButtonActionPerformed

    private void removeCityjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeCityjButtonActionPerformed
        // TODO add your handling code here:
        int row = cityjTable.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a City from table");
            return;
        }
        
        CityNetwork city = (CityNetwork)cityjTable.getValueAt(row, 0);
        StateNetwork state = (StateNetwork)statejComboBox.getSelectedItem();
        state.removeCity(city);
        populateTable();
        
    }//GEN-LAST:event_removeCityjButtonActionPerformed

    private void statejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statejComboBoxActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_statejComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCityJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField cityNameJTextField;
    private javax.swing.JTable cityjTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton removeCityjButton;
    private javax.swing.JComboBox statejComboBox;
    // End of variables declaration//GEN-END:variables
}
