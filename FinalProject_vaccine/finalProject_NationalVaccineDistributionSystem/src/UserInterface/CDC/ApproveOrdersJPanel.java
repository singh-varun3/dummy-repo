/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.CDC;

import Business.Business;
import Business.NationalEnterprise.CDC;
import Business.Order.OrderItem;
import Business.Organization.CDCOrganization;
import Business.Organization.DistributorOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ProviderVaccineOrderWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vaibhav
 */
public class ApproveOrdersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ApproveOrdersJPanel
     */
     private JPanel workContainer;
    private UserAccount userAccount;
    private Business business;
    private CDC cdcEnterprise;
    private CDCOrganization cdcOrg;
    private ProviderVaccineOrderWorkRequest request;
    
    public ApproveOrdersJPanel(JPanel workContainer, UserAccount userAccount,CDC cdcEnterprise,CDCOrganization cdcOrg,Business business,ProviderVaccineOrderWorkRequest request ) {
        initComponents();
        this.workContainer = workContainer;
        this.userAccount = userAccount;
        this.business = business;
        this.cdcEnterprise =cdcEnterprise;
        this.request =request;
        this.cdcOrg = cdcOrg;
        
        try{
        stateNamejTextField.setText(String.valueOf(request.getRequestState()));
        //statePopulationjTextField.setText(String.valueOf(request.getRequestState().getStatePopulation()));
        statePopulationjTextField.setText(request.getRequestState().getStateName());
        vaccinesLeftjTextField.setText(String.valueOf(request.getRequestState().getVaccinesLeftForState()));
        orderjTextField.setText(String.valueOf(request.getVaccineOrder().getOrderNumber()));
        displayContractDetails();
        populateTable();
        }
        catch (Exception e){
        stateNamejTextField.setText(String.valueOf(request.getRequestState()));
        //statePopulationjTextField.setText(String.valueOf(request.getRequestState().getStatePopulation()));
        //statePopulationjTextField.setText(request.getRequestState().getStateName());
        //vaccinesLeftjTextField.setText(String.valueOf(request.getRequestState().getVaccinesLeftForState()));
        orderjTextField.setText(String.valueOf(request.getVaccineOrder().getOrderNumber()));
        displayContractDetails();
        populateTable();
        }
        
        
        
    }
    
    private void displayContractDetails(){
        
        if(request.isBimonthlyContract())
            contractDetailsjTextField.setText("Bimonthly");
        if(request.isMonthlyContract())
            contractDetailsjTextField.setText("Monthly");
        if(request.isAdhocRequest())
            contractDetailsjTextField.setText("Adhoc");
        
    }
    
    private void populateTable(){
        
         int rowCount = vaccinejTable.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel)vaccinejTable.getModel();
        
        for(int i=rowCount-1 ; i>=0; i--){
            dtm.removeRow(i);
        }
        
        for(OrderItem oi: request.getVaccineOrder().getOrderList())
        {
            Object[] row = new Object[11];
            
                row[0] = oi.getVaccineProduct();
                row[1] = oi;
                row[2] = oi.getVaccineProduct().getVaccineId();
                row[3] = oi.getVaccineProduct().getBatchId();
                row[4] = oi.getVaccineProduct().getVaccinePrice();
                row[5] = String.valueOf(oi.getVaccineProduct().getMinOperatingTemp()+ " - " +oi.getVaccineProduct().getMaxOperatingTemp());
                row[6] = oi.getQuantity();
                row[7] = oi.getVaccineProduct().getManufactureDate();
                row[8] = oi.getVaccineProduct().getDateOfExpiry();
                row[9] = oi.getVaccineProduct().getVaccinePrice()*oi.getQuantity();
                row[10] = oi.getVaccineProduct().getVaccineDefinition().isFederalFunded() ? "Federal" : oi.getVaccineProduct().getVaccineDefinition().getFundedStateList().isEmpty()? "Not Funded" : " State";
                dtm.addRow(row);
            
            
            
            
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        orderjTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        statePopulationjTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        vaccinesLeftjTextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        vaccinejTable = new javax.swing.JTable();
        backJButton2 = new javax.swing.JButton();
        approveOrderjButton = new javax.swing.JButton();
        contractDetailsjTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        stateNamejTextField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Approve Orders");

        jLabel2.setText("Order Number:");

        orderjTextField.setEnabled(false);

        jLabel3.setText("State Population:");

        statePopulationjTextField.setEnabled(false);
        statePopulationjTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statePopulationjTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Vaccines left for State:");

        vaccinesLeftjTextField.setEnabled(false);
        vaccinesLeftjTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaccinesLeftjTextFieldActionPerformed(evt);
            }
        });

        vaccinejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Code", "Vaccine Name", "Vaccine id", "Lot Number", "Price", "Temperature Range", "Quantity", "manufacture date", "expiry date", "Amount", "Funded?"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vaccinejTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(vaccinejTable);

        backJButton2.setText("<< Back");
        backJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton2ActionPerformed(evt);
            }
        });

        approveOrderjButton.setText("Approve Order");
        approveOrderjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveOrderjButtonActionPerformed(evt);
            }
        });

        contractDetailsjTextField.setEnabled(false);

        jLabel5.setText("Contract Details:");

        jLabel6.setText("State:");

        stateNamejTextField.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(stateNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(statePopulationjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(vaccinesLeftjTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(approveOrderjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(orderjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(contractDetailsjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(statePopulationjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(vaccinesLeftjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(stateNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(orderjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(contractDetailsjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(approveOrderjButton)
                    .addComponent(backJButton2))
                .addContainerGap(75, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton2ActionPerformed
        // TODO add your handling code here:
        workContainer.remove(this);
        CardLayout layout = (CardLayout) workContainer.getLayout();
        layout.previous(workContainer);
    }//GEN-LAST:event_backJButton2ActionPerformed

    private void approveOrderjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveOrderjButtonActionPerformed
        // TODO add your handling code here:
        //check if approved
        if(request.getStatus().equalsIgnoreCase("CDC Approved") ||request.getStatus().equalsIgnoreCase("Rejected")|| request.getStatus().equalsIgnoreCase("Shipped") )
        {
            JOptionPane.showMessageDialog(null, "Order  already processed!");
             return;
        }
        
        //get the total quantity of the order
        int totalOrderedQuantity =0;
        for(OrderItem oi : request.getVaccineOrder().getOrderList())
        {
            totalOrderedQuantity = totalOrderedQuantity + oi.getQuantity();
        }
        
        //compare it with vaccines left for state
        
        //if(totalOrderedQuantity > request.getRequestState().getVaccinesLeftForState())
        //{
        //    JOptionPane.showMessageDialog(null, "Order exceeded available vaccines for state");
        //    request.setStatus("Rejected");
        //    return;
            
        //}
        
        
        
        
        
        //get the distributor org and insert the request in his queue
        DistributorOrganization distOrg = null;
        for(Organization org: business.getDistributor().getOrganizationDirectory().getOrganizationList())
        {
            if(org instanceof DistributorOrganization)
            {
                org.getWorkQueue().addWorkRequest(request);
            }
        }
        
        
        
        //change the work request status
        request.setApprovedByCDC(true);
        request.setCdcApprovedBy(userAccount);
        request.setStatus("CDC Approved");
        
        //change the vaccines left for state
        //int countLeft = request.getRequestState().getVaccinesLeftForState();
        int countLeft = 10;
        /////request.getRequestState().setVaccinesLeftForState(countLeft-totalOrderedQuantity);
        

      

        

        

        JOptionPane.showMessageDialog(null, "Order Sent to Distributor!");

    }//GEN-LAST:event_approveOrderjButtonActionPerformed

    private void statePopulationjTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statePopulationjTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statePopulationjTextFieldActionPerformed

    private void vaccinesLeftjTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaccinesLeftjTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vaccinesLeftjTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveOrderjButton;
    private javax.swing.JButton backJButton2;
    private javax.swing.JTextField contractDetailsjTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField orderjTextField;
    private javax.swing.JTextField stateNamejTextField;
    private javax.swing.JTextField statePopulationjTextField;
    private javax.swing.JTable vaccinejTable;
    private javax.swing.JTextField vaccinesLeftjTextField;
    // End of variables declaration//GEN-END:variables
}
