/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Provider;

import Business.Business;
import Business.Clinic.Clinic;
import Business.Enterprise.HospitalEnterprise;
import Business.Order.OrderItem;
import Business.Organization.HospitalOrganization;
import Business.Organization.Organization;
import Business.Vaccine.VaccineProduct;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vaibhav
 */
public class ViewInventoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewInventoryJPanel
     */
    private JPanel workContainer;
    private Business business;
    private HospitalEnterprise hospitalEnterprise;
    private HospitalOrganization hospitalOrganization;
    private Clinic clinic;

    public ViewInventoryJPanel(JPanel workContainer, Business business, HospitalEnterprise hospitalEnterprise, HospitalOrganization hospitalOrganization) {
        initComponents();
        this.workContainer = workContainer;
        this.business = business;
        this.hospitalEnterprise = hospitalEnterprise;
        this.hospitalOrganization = hospitalOrganization;
        populateOrderTable();
        populateInventoryTemperature();

    }

    private void populateOrderTable() {

        int rowCount = orderjTable.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel) orderjTable.getModel();

        for (int i = rowCount - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }
        for (Organization org : hospitalEnterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof HospitalOrganization) {
                HospitalOrganization hospOrg = (HospitalOrganization) org;
                for (VaccineProduct product : hospOrg.getClinic().getVaccineInventoryClinic()) {
                    Object[] row = new Object[9];

                    row[0] = product;
                    row[1] = product.getVaccineDefinition().getVaccineName();
                    row[2] = product.getManufacturerName();
                    row[3] = product.getVaccineId();
                    row[4] = product.getBatchId();

                    row[5] = String.valueOf(product.getMinOperatingTemp() + " - " + product.getMaxOperatingTemp());
                    row[6] = product.getAvailablity();
                    row[7] = product.getManufactureDate();
                    row[8] = product.getDateOfExpiry();

                    dtm.addRow(row);

                }
            }
        }
    }
    
    
    private void populateInventoryTemperature(){
    
     for (Organization org : hospitalEnterprise.getOrganizationDirectory().getOrganizationList()) {
                if (org instanceof HospitalOrganization) {
                    HospitalOrganization hospOrg = (HospitalOrganization) org;
                    clinic = hospOrg.getClinic();
                    

                       
                    }
                }
     
     temperaturejTextField.setText(String.valueOf(clinic.getTemperature()));
     
            
    
    
    
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderjTable = new javax.swing.JTable();
        refreshjButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        temperaturejTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        setTemperaturejButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        newtemperaturejTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View Inventory");

        orderjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Code", "Vaccine Name", "Brand", "Vaccine ID", "Batch ID", "Temp Range", "Quantity", "Manufacture Date", "Date Of Expiry"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderjTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(orderjTable);

        refreshjButton.setText("Refresh");
        refreshjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshjButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Inventory Temperature:");

        temperaturejTextField.setEnabled(false);

        jLabel3.setText("degrees Centigrate");

        setTemperaturejButton.setText("Set Temperature");
        setTemperaturejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setTemperaturejButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("degrees Centigrate");

        jLabel6.setText("Temperature:");

        jLabel5.setText("Set Inventory Temperature:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(setTemperaturejButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newtemperaturejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(482, 482, 482))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(temperaturejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(refreshjButton))
                            .addComponent(jSeparator1))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(refreshjButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(temperaturejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(newtemperaturejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(setTemperaturejButton)
                .addContainerGap(116, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshjButtonActionPerformed
        // TODO add your handling code here:
        populateOrderTable();
    }//GEN-LAST:event_refreshjButtonActionPerformed

    private void setTemperaturejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setTemperaturejButtonActionPerformed
        // TODO add your handling code here:

        try {
            double temperature = Double.parseDouble(newtemperaturejTextField.getText());

            //check if the temp is suitable for vaccines
           
            for (Organization org : hospitalEnterprise.getOrganizationDirectory().getOrganizationList()) {
                if (org instanceof HospitalOrganization) {
                    HospitalOrganization hospOrg = (HospitalOrganization) org;
                    clinic = hospOrg.getClinic();
                    for (VaccineProduct product : hospOrg.getClinic().getVaccineInventoryClinic()) {
                        double minTemp = product.getMinOperatingTemp();
                        double maxTemp = product.getMaxOperatingTemp();

                        if (temperature < minTemp || temperature > maxTemp) {
                            String msg = "Temperature not suitable for " + product.getVaccineDefinition().getVaccineName() + " temperature range should be " + minTemp + " - " + maxTemp;
                            JOptionPane.showMessageDialog(null, msg);
                            return;
                        }

                       
                    }
                }
            }
             clinic.setTemperature(temperature);
                        temperaturejTextField.setText(String.valueOf(clinic.getTemperature()));
            
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter numeric values for temperature");
            return;
        }

    }//GEN-LAST:event_setTemperaturejButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField newtemperaturejTextField;
    private javax.swing.JTable orderjTable;
    private javax.swing.JButton refreshjButton;
    private javax.swing.JButton setTemperaturejButton;
    private javax.swing.JTextField temperaturejTextField;
    // End of variables declaration//GEN-END:variables
}
