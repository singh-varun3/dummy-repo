/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.Provider;

import Business.Business;
import Business.Enterprise.HospitalEnterprise;
import Business.Organization.HospitalOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PaymentRequestWorkRequest;
import Business.WorkQueue.ProviderVaccineOrderWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vaibhav
 */
public class ManageProviderPaymentsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageProviderPaymentsJPanel
     */
    private JPanel workContainer;

    private HospitalEnterprise hospital;
    private UserAccount userAccount;
    private HospitalOrganization hospitalOrg;
    private Business business;
    
    public ManageProviderPaymentsJPanel(JPanel workContainer, HospitalEnterprise hospital,HospitalOrganization hospitalOrg,UserAccount userAccount , Business business) {
        initComponents();
         this.workContainer = workContainer;
        this.userAccount = userAccount;
        this.hospital = hospital;
        this.business = business;
        populateTable();
        currentBalancejTextField.setText(String.valueOf(hospital.getFinancialAccount().getTotalBalance()));
        
    }
    
    private void populateTable(){
        
        int rowCount = paymentsjTable.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel)paymentsjTable.getModel();
        
        for(int i=rowCount-1 ; i>=0; i--){
            dtm.removeRow(i);
        }
        for(Organization org: hospital.getOrganizationDirectory().getOrganizationList())
        {
            if(org instanceof HospitalOrganization)
            {
                HospitalOrganization hospitalOrg = (HospitalOrganization)org;
        
        for(WorkRequest wr: hospitalOrg.getWorkQueue().getWorkRequestList())
        {   
            if( wr instanceof PaymentRequestWorkRequest)
            {
              PaymentRequestWorkRequest request = (PaymentRequestWorkRequest)wr  ;
               Object[] row = new Object[7];
               row[0] = request;
               row[1] = request.getProviderRequest().getSender();
               row[2] = request.getStatus();
               row[3] = request.getSender();
               row[4] = request.getAmount();
               row[5] =  request.getReceiver();
               row[6] = request.getResolveDate();
               dtm.addRow(row);
              
            }
        }
        
            } 
    }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        paymentsjTable = new javax.swing.JTable();
        refreshjButton = new javax.swing.JButton();
        payAmountjButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        currentBalancejTextField = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Payments");

        paymentsjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order number", "Order Requested by", "Status", "Sender", "Amount", "Payed by", "Payed on"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        paymentsjTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(paymentsjTable);

        refreshjButton.setText("Refresh");
        refreshjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshjButtonActionPerformed(evt);
            }
        });

        payAmountjButton.setText("Pay Amount");
        payAmountjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payAmountjButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Current Balance:");

        currentBalancejTextField.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(refreshjButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(currentBalancejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(payAmountjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refreshjButton)
                .addGap(9, 9, 9)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(payAmountjButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(currentBalancejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(111, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshjButtonActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_refreshjButtonActionPerformed

    private void payAmountjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payAmountjButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = paymentsjTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select an Payment from table");
            return;
        }
        
        PaymentRequestWorkRequest request = (PaymentRequestWorkRequest)paymentsjTable.getValueAt(selectedRow, 0);
        
        if(request.getStatus().equalsIgnoreCase("Payed"))
        {
            JOptionPane.showMessageDialog(null, "Payment already made!");
            return;
        }
        
        double amount = request.getAmount();
        if(hospital.getFinancialAccount().getTotalBalance() < amount)
        {
            JOptionPane.showMessageDialog(null, "Not enough funds");
            return;
            
        }
        
        hospital.getFinancialAccount().setTotalBalance(hospital.getFinancialAccount().getTotalBalance() - amount);
        business.getDistributor().getFinancialAccount().setTotalBalance(business.getDistributor().getFinancialAccount().getTotalBalance() + amount);
        
        
        request.setStatus("Payed");
        request.setReceiver(userAccount);
        request.setResolveDate(new Date());
        currentBalancejTextField.setText(String.valueOf(hospital.getFinancialAccount().getTotalBalance()));
        
        JOptionPane.showMessageDialog(null, "Payment succeded!");
            return;
        
        
    }//GEN-LAST:event_payAmountjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField currentBalancejTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton payAmountjButton;
    private javax.swing.JTable paymentsjTable;
    private javax.swing.JButton refreshjButton;
    // End of variables declaration//GEN-END:variables
}
