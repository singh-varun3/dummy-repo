/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.Business;
import Business.ConfigureABusiness;
import Business.DB4OUtil.DB4OUtil;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.NationalEnterprise.Manufacturer;
import Business.Network.CityNetwork;
import Business.Network.StateNetwork;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;

/**
 *
 * @author Vaibhav
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    private Business business;
    private DB4OUtil dB40Util = DB4OUtil.getInstance();

    public MainJFrame() {
        initComponents();
        //business = ConfigureABusiness.configure();
        business = dB40Util.retrieveSystem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        passwordjPasswordField = new javax.swing.JPasswordField();
        LoginJButton = new javax.swing.JButton();
        LogoutJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        userProcessContainer = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(102, 700));

        jSplitPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jSplitPane1.setDividerLocation(50);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel1.setText("vDistribute v1.0");

        jLabel2.setText("Username:");

        jLabel3.setText("Password :");

        LoginJButton.setText("Login");
        LoginJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginJButtonActionPerformed(evt);
            }
        });

        LogoutJButton.setText("Logout");
        LogoutJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutJButtonActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/vaccine_wellness_syringe_shot-512.png"))); // NOI18N
        jLabel4.setText("jLabel4");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordjPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LoginJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LogoutJButton)
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(usernameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(passwordjPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LoginJButton)
                    .addComponent(LogoutJButton)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane1.setTopComponent(jPanel1);

        userProcessContainer.setLayout(new java.awt.CardLayout());
        jSplitPane1.setRightComponent(userProcessContainer);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LogoutJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.removeAll();
        usernameJTextField.setText(null);
        passwordjPasswordField.setText(null);
        dB40Util.storeSystem(business);
    }//GEN-LAST:event_LogoutJButtonActionPerformed

    private void LoginJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginJButtonActionPerformed
        // TODO add your handling code here:

        String username = usernameJTextField.getText();
        if(username.trim().equalsIgnoreCase(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter a username!");
            return;
            
        }
        char[] passwordCharArray = passwordjPasswordField.getPassword();
        String password = String.valueOf(passwordCharArray);
        if(password.trim().equalsIgnoreCase(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter a Password!");
            return;
            
        }

        Enterprise isEnterprise = null;
        Organization organization = null;
        StateNetwork stateNetwork = null;

        UserAccount userAccount = business.getUserAccountDirectory().authenticateUser(username, password);
        
        if (userAccount == null) {
            //not a sys admin
            //check if it is a cdc enterprise admin

            userAccount = business.getCdc().getUserAccountDirectory().authenticateUser(username, password);
            if(userAccount == null)
            { for(Organization org: business.getCdc().getOrganizationDirectory().getOrganizationList())
            {
                userAccount = org.getUserAccountDirectory().authenticateUser(username, password);
            if(userAccount != null)
            {organization = org;
            break;
            }
            }
            }
            if(userAccount != null)
            {isEnterprise = business.getCdc();
                
            }
        }
        if (userAccount == null) {
                //not a sys,cdc admin
            //check if it is a manufacture enterprise admin
            for(Manufacturer manufacturer : business.getManufacturerDirectory().getManufacturerList())
            { 
                userAccount = manufacturer.getUserAccountDirectory().authenticateUser(username, password);
                
                if(userAccount == null)
                {
                    for(Organization org: manufacturer.getOrganizationDirectory().getOrganizationList())
                {
                    userAccount = org.getUserAccountDirectory().authenticateUser(username, password);
                    if(userAccount != null)
                        break;
                }
                }
                if(userAccount != null)
                { isEnterprise = manufacturer;
                    break;
                }
            }
            
                
            
        }if (userAccount == null) {
                //not a sys,cdc,manufacturer admin
            //check if it is a distributor enterprise admin

            userAccount = business.getDistributor().getUserAccountDirectory().authenticateUser(username, password);
            if(userAccount == null)
            { for(Organization org: business.getDistributor().getOrganizationDirectory().getOrganizationList())
            { userAccount = org.getUserAccountDirectory().authenticateUser(username, password);
                if(userAccount != null)
                {
                    organization = org;
                    break;
                }
            }
            }
            if(userAccount != null)
                isEnterprise = business.getDistributor();

        }if (userAccount == null) {
                //not a sys,cdc,manufacturer,distributor admin
            //check if it is a PHD enterprise admin
            for (StateNetwork state : business.getStateList()) {
                if(userAccount==null)
                { userAccount = state.getPublicHealthDepartment().getUserAccountDirectory().authenticateUser(username, password);
                if(userAccount == null)
                {for(Organization org: state.getPublicHealthDepartment().getOrganizationDirectory().getOrganizationList())
                {userAccount = org.getUserAccountDirectory().authenticateUser(username, password);
                    if(userAccount != null)
                    {   stateNetwork = state;
                        organization =org;
                        break;
                    }
                }
                }
                if(userAccount != null)
                {
                    isEnterprise = state.getPublicHealthDepartment();
                    
                }
                if (userAccount == null) {
                              //not a sys,cdc,manufacturer,distributor,PHD admin
                    //check if it is a Provider/hospital enterprise admin

                    for (CityNetwork city : state.getCityList()) {
                        for (Enterprise hospital : city.getEnterpriseDirectory().getEnterpriseList()) {
                            userAccount = hospital.getUserAccountDirectory().authenticateUser(username, password);
                            if (userAccount == null) {
                                for (Organization o : hospital.getOrganizationDirectory().getOrganizationList()) {
                                    userAccount = o.getUserAccountDirectory().authenticateUser(username, password);

                                    if (userAccount != null) {
                                        stateNetwork = state;
                                        isEnterprise = hospital;
                                        organization = o;
                                        break;

                                    }
                                }
                            }
                            else
                            {   
                                //find the useraccount as enterprise admin
                                isEnterprise = hospital;
                                break;
                            }
                            // check if we already found the ord user account
                    if(organization != null)
                    {
                        break;
                    }
                            

                        }
                        if(isEnterprise != null)
                {
                    break;
                }
                    }

                } 
                else {
                    isEnterprise = state.getPublicHealthDepartment();
                    break;
                }

            }
        }
        }
        //check useraccount exist in this system or not
        if(userAccount == null)
        {
            JOptionPane.showMessageDialog(null, "Invalid Credentials");
            
        }
        
        else
        {
            //login into the useraccount's workarea
            CardLayout layout = (CardLayout)userProcessContainer.getLayout();
            userProcessContainer.add("WorkArea", userAccount.getRole().createWorkArea(userProcessContainer, userAccount,isEnterprise, organization, business, stateNetwork));
            layout.next(userProcessContainer);
                    
                    
                    
                    }
        
    }//GEN-LAST:event_LoginJButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LoginJButton;
    private javax.swing.JButton LogoutJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPasswordField passwordjPasswordField;
    private javax.swing.JPanel userProcessContainer;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
